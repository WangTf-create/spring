<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.crgs.springcloud</groupId>
    <artifactId>_springcloud</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>cloud-provider-payment-eureka_8001</module>
        <module>cloud-consumer-order-eureka_80</module>
        <module>cloud-common-apis</module>
        <module>cloud-eureka-server_7001</module>
        <module>cloud-eureka-server_7002</module>
        <module>cloud-provider-payment-eureka_8002</module>
        <module>cloud-provider-payment-zk_8004</module>
        <module>cloud-consumer-order-zk_80</module>
        <module>cloud-provider-payment-consul_8005</module>
        <module>cloud-consumer-order-consul_80</module>
        <module>cloud-consumer-order-openfeign_80</module>
        <module>cloud-provider-payment-hystrix_8001</module>
        <module>cloud-consumer-feign-hystrix-order_80</module>
        <module>cloud-consumer-hystrix-dashboard_9001</module>
        <module>cloud-gateway-gateway_9527</module>
        <module>cloud-config-center_3344</module>
        <module>cloud-config-client_3355</module>
        <module>cloud-config-client_3366</module>
        <module>cloud-stream-producer-kafka_8801</module>
        <module>cloud-stream-consumer-kafka_8802</module>
        <module>cloud-stream-consumer-kafka_8803</module>
        <module>cloud-alibaba-payment-provider_9001</module>
        <module>cloud-alibaba-order-consumer_9002</module>
        <module>cloud-alibaba-payment-provider_9003</module>
        <module>cloud-alibaba-config-nacos-client_3377</module>
        <module>cloud-alibaba-config-nacos-cluster-payment_9004</module>
        <module>cloud-alibaba-sentinel-service_8401</module>
        <module>cloud-alibaba-payment-provider-nacos_9003</module>
        <module>cloud-alibaba-payment-provider-nacos_9004</module>
        <module>cloud-alibaba-order-consumer-nacos_84</module>
        <module>seata-order-service_2001</module>
        <module>seata-account-service_2003</module>
        <module>seata-storage-service_2002</module>
    </modules>


    <!--统一管理jar包版本-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>12</maven.compiler.source>
        <maven.compiler.target>12</maven.compiler.target>
        <junit.version>4.12</junit.version>
        <lombok.version>1.18.10</lombok.version>
        <log4j.version>1.2.17</log4j.version>
        <mysql.version>8.0.18</mysql.version>
        <druid.version>1.1.16</druid.version>
        <spring.boot.version>2.2.2.RELEASE</spring.boot.version>
        <spring.cloud.version>Hoxton.SR1</spring.cloud.version>
        <spring.cloud.alibaba.version>2.1.0.RELEASE</spring.cloud.alibaba.version>
        <mybatis.spring.boot.version>2.1.1</mybatis.spring.boot.version>
        <druid.spring.boot.starter.version>1.1.10</druid.spring.boot.starter.version>
        <fastjson.version>1.2.70</fastjson.version>
        <hu-all.version>4.0.9</hu-all.version>
    </properties>


    <!--子模块继承之后，提供作用：锁定版本+子module不用设置groupId和version-->

    <!--

     dependencyManagement和dependencies的区别？
     dependencyManagement只是声明依赖，并不实现引入，因此子项目需要声明需要用的依赖

    -->
    <dependencyManagement>
        <dependencies>

            <!--spring boot 2.2.2-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring cloud Hoxton.SR1-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--spring cloud alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--mysql-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- druid-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.version}</version>
            </dependency>
            <!--junit  自定义-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <!--log4j  自定义-->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <!--lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.spring.boot.starter.version}</version>
            </dependency>

            <!--fast json-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hu-all.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!--此插件用于使devtool生效，同时需要开启idea自动编译功能，Compiler A D B C-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--第三方maven私服-->
    <repositories>
        <repository>
            <id>nexus-aliyun</id>
            <name>Nexus aliyun</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

</project>
